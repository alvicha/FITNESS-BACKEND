name: Deploy Symfony API with MySQL and Nginx

on:
  push:
    branches:
      - main 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Clonar el repositorio
      - name: Checkout c칩digo
        uses: actions/checkout@v4

      # 2. Iniciar sesi칩n en Docker Hub
      - name: Iniciar sesi칩n en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. Construir y subir la imagen de Symfony
      - name: Construir y subir imagen Symfony
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-image:latest -f backend/softwareFitness/docker/Dockerfile backend/softwareFitness/
          docker push ${{ secrets.DOCKER_USERNAME }}/symfony-image:latest

      # 4. Construir y subir la imagen de Nginx
      - name: Construir y subir imagen Nginx
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-pi:latest -f backend/softwareFitness/docker/Dockerfile backend/softwareFitness/
          docker push ${{ secrets.DOCKER_USERNAME }}/symfony-pi:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      # 2. Verificar estructura del repositorio
      - name: Verificar existencia de compose.yml
        run: |
          ls -l /home/runner/work/FITNESS-BACKEND/FITNESS-BACKEND/backend/softwareFitness/

      # 3. Transferir el archivo compose.yml al servidor remoto
      - name: Transferir el archivo compose.yml al servidor remoto
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          source: ${{ github.workspace }}/compose.yml
          target: ~/deploy/
          strip_components: 4

      # 4. Desplegar en el servidor remoto usando Docker Compose
      - name: Desplegar en servidor remoto
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            sudo chmod 666 /var/run/docker.sock
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            # Detener, bajar las im치genes y reiniciar los contenedores
            docker-compose -f /home/${{ secrets.REMOTE_USER }}/deploy/compose.yml pull
            docker-compose -f /home/${{ secrets.REMOTE_USER }}/deploy/compose.yml down
            docker-compose -f /home/${{ secrets.REMOTE_USER }}/deploy/compose.yml up -d --force-recreate

      # 5. Crear la base de datos si no existe y ejecutar migraciones
      - name: Crear la base de datos y ejecutar migraciones
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          script: |
            docker exec symfony_app php bin/console doctrine:database:create --if-not-exists
            docker exec symfony_app php bin/console doctrine:migrations:migrate --no-interaction
